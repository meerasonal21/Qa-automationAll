<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="5" failed="2" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-12T17:19:11Z" name="Suite" finished-at="2023-07-12T17:19:11Z" duration-ms="47">
    <groups>
      <group name="important">
        <method signature="Testing2.test4()[pri:0, instance:selenium.Testing2@3d921e20]" name="test4" class="selenium.Testing2"/>
      </group> <!-- important -->
      <group name="smoke">
        <method signature="Testing3.createUser()[pri:1, instance:selenium.Testing3@36b4cef0]" name="createUser" class="selenium.Testing3"/>
        <method signature="Testing1.test1(int, java.lang.String)[pri:0, instance:selenium.Testing1@3234e239]" name="test1" class="selenium.Testing1"/>
        <method signature="Testing2.test3()[pri:0, instance:selenium.Testing2@3d921e20]" name="test3" class="selenium.Testing2"/>
      </group> <!-- smoke -->
      <group name="sanity">
        <method signature="Testing3.createUser()[pri:1, instance:selenium.Testing3@36b4cef0]" name="createUser" class="selenium.Testing3"/>
        <method signature="Testing1.test2()[pri:0, instance:selenium.Testing1@3234e239]" name="test2" class="selenium.Testing1"/>
      </group> <!-- sanity -->
    </groups>
    <test started-at="2023-07-12T17:19:11Z" name="Test" finished-at="2023-07-12T17:19:11Z" duration-ms="47">
      <class name="selenium.Testing2">
        <test-method signature="test3()[pri:0, instance:selenium.Testing2@3d921e20]" started-at="2023-07-12T17:19:11Z" name="test3" finished-at="2023-07-12T17:19:11Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method signature="test4()[pri:0, instance:selenium.Testing2@3d921e20]" started-at="2023-07-12T17:19:11Z" name="test4" finished-at="2023-07-12T17:19:11Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
      </class> <!-- selenium.Testing2 -->
      <class name="selenium.Testing3">
        <test-method signature="createUser()[pri:1, instance:selenium.Testing3@36b4cef0]" started-at="2023-07-12T17:19:11Z" name="createUser" finished-at="2023-07-12T17:19:11Z" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Verifying Element expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Verifying Element expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at selenium.Testing3.createUser(Testing3.java:17)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.TestNG.privateMain(TestNG.java:1354)
at org.testng.TestNG.main(TestNG.java:1323)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser -->
        <test-method signature="deletUser()[pri:3, instance:selenium.Testing3@36b4cef0]" started-at="2023-07-12T17:19:11Z" name="deletUser" finished-at="2023-07-12T17:19:11Z" depends-on-methods="selenium.Testing3.editUser" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Testing3.deletUser()[pri:3, instance:selenium.Testing3@36b4cef0] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Testing3.deletUser()[pri:3, instance:selenium.Testing3@36b4cef0] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:887)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.TestNG.privateMain(TestNG.java:1354)
at org.testng.TestNG.main(TestNG.java:1323)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletUser -->
        <test-method signature="editUser()[pri:2, instance:selenium.Testing3@36b4cef0]" started-at="2023-07-12T17:19:11Z" name="editUser" finished-at="2023-07-12T17:19:11Z" depends-on-methods="selenium.Testing3.createUser" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Testing3.editUser()[pri:2, instance:selenium.Testing3@36b4cef0] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Testing3.editUser()[pri:2, instance:selenium.Testing3@36b4cef0] depends on not successfully finished methods
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:887)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.TestNG.privateMain(TestNG.java:1354)
at org.testng.TestNG.main(TestNG.java:1323)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editUser -->
      </class> <!-- selenium.Testing3 -->
      <class name="selenium.Testing1">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:selenium.Testing1@3234e239]" started-at="2023-07-12T17:19:11Z" name="beforeSuite" finished-at="2023-07-12T17:19:11Z" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:selenium.Testing1@3234e239]" started-at="2023-07-12T17:19:11Z" name="beforeTest" finished-at="2023-07-12T17:19:11Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:selenium.Testing1@3234e239]" started-at="2023-07-12T17:19:11Z" name="beforeClass" finished-at="2023-07-12T17:19:11Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:selenium.Testing1@3234e239]" started-at="2023-07-12T17:19:11Z" name="beforeMethod" finished-at="2023-07-12T17:19:11Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="abc(java.lang.Integer, java.lang.String)[pri:0, instance:selenium.Testing1@3234e239]" started-at="2023-07-12T17:19:11Z" name="abc" data-provider="loginData" finished-at="2023-07-12T17:19:11Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abc -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:selenium.Testing1@3234e239]" started-at="2023-07-12T17:19:11Z" name="afterMethod" finished-at="2023-07-12T17:19:11Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="abc(java.lang.Integer, java.lang.String)[pri:0, instance:selenium.Testing1@3234e239]" started-at="2023-07-12T17:19:11Z" name="abc" data-provider="loginData" finished-at="2023-07-12T17:19:11Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- abc -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:selenium.Testing1@3234e239]" started-at="2023-07-12T17:19:11Z" name="beforeMethod" finished-at="2023-07-12T17:19:11Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:selenium.Testing1@3234e239]" started-at="2023-07-12T17:19:11Z" name="afterMethod" finished-at="2023-07-12T17:19:11Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:selenium.Testing1@3234e239]" started-at="2023-07-12T17:19:11Z" name="beforeMethod" finished-at="2023-07-12T17:19:11Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test1(int, java.lang.String)[pri:0, instance:selenium.Testing1@3234e239]" started-at="2023-07-12T17:19:11Z" name="test1" finished-at="2023-07-12T17:19:11Z" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Cannot inject @Test annotated Method [test1] with [int, class java.lang.String].
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Cannot inject @Test annotated Method [test1] with [int, class java.lang.String].
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:407)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:356)
at org.testng.internal.Parameters.createParameters(Parameters.java:635)
at org.testng.internal.Parameters.handleParameters(Parameters.java:769)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:49)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:37)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:923)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.TestNG.privateMain(TestNG.java:1354)
at org.testng.TestNG.main(TestNG.java:1323)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method signature="test2()[pri:0, instance:selenium.Testing1@3234e239]" started-at="2023-07-12T17:19:11Z" name="test2" finished-at="2023-07-12T17:19:11Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:selenium.Testing1@3234e239]" started-at="2023-07-12T17:19:11Z" name="afterMethod" finished-at="2023-07-12T17:19:11Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:selenium.Testing1@3234e239]" started-at="2023-07-12T17:19:11Z" name="afterClass" finished-at="2023-07-12T17:19:11Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:selenium.Testing1@3234e239]" started-at="2023-07-12T17:19:11Z" name="afterTest" finished-at="2023-07-12T17:19:11Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:selenium.Testing1@3234e239]" started-at="2023-07-12T17:19:11Z" name="afterSuite" finished-at="2023-07-12T17:19:11Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- selenium.Testing1 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
